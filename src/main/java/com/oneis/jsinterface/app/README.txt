
When writing a Java interface for an ActiveRecord object, you have to be very careful about the names of functions.

If the underlying ruby function is automatically generated by ActiveRecord, then you must:

 * For getter functions, use exactly the Ruby name.

 * For setter functions,
   - use the name jsset_RUBYNAME(), where RUBYNAME is the Ruby name of the setter, without the final =
   - in the Ruby model files, use KActiveRecordJavaInterface.make_jsset_methods() to create the jsset_* methods.

See AppWorkUnit and work_unit.rb for an example.


Failing to name functions correctly results in a race condition. If ActiveRecord hasn't created the method by the
time the Java interface is first called, method_missing will be called with the Java-style name instead, and fails.
